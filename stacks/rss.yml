services:
  db:
    image: postgres:15
    container_name: miniflux_db
    restart: unless-stopped
    user: ${UID:-1000}:${GID:-1000}
    networks:
      - backend
    volumes:
      - ${DOCKER_DATA_PATH:-/var/docker}/miniflux/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=miniflux
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      interval: 10s
      start_period: 30s

  miniflux:
    image: ghcr.io/miniflux/miniflux:latest-distroless
    container_name: miniflux
    restart: unless-stopped
    user: ${UID:-1000}:${GID:-1000}
    depends_on:
      - db
    networks:
      - proxy
      - backend
    environment:
      DATABASE_URL: postgres://miniflux:${DB_PASSWORD}@db/miniflux?sslmode=disable
      RUN_MIGRATIONS: 1
      CREATE_ADMIN: 1
      POLLING_FREQUENCY: 5
      ADMIN_USERNAME: ${MINIFLUX_USER}
      ADMIN_PASSWORD: ${MINIFLUX_PASSWORD}
      BASE_URL: ${MINIFLUX_URL}
      LISTEN_ADDR: 0.0.0.0:8080
    healthcheck:
      test: ["CMD", "/usr/bin/miniflux", "-healthcheck", "auto"]

  rss-funnel:
    image: ghcr.io/shouya/rss-funnel:latest
    container_name: rss-funnel
    restart: unless-stopped
    user: ${UID:-1000}:${GID:-1000}
    networks:
      - proxy
      - backend
    volumes:
      - /var/docker/rss-funnel:/data
    environment:
      RSS_FUNNEL_CONFIG: /data/config.yaml
      RSS_FUNNEL_BIND: 0.0.0.0:4080

networks:
  backend:
    driver: bridge
    internal: true
  proxy:
    external: true
